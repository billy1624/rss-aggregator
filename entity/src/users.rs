//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use super::sea_orm_active_enums::UserRole;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub username: String,
    pub password: String,
    pub role: UserRole,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::channel_users::Entity")]
    ChannelUsers,
    #[sea_orm(has_many = "super::users_items::Entity")]
    UsersItems,
}

impl Related<super::channel_users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChannelUsers.def()
    }
}

impl Related<super::users_items::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UsersItems.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
